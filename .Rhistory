## --------------------------------------------------------------------------------------
par(mfrow=c(1,2))
plot(etch.rate.aov, which=1:2)
## --------------------------------------------------------------------------------------
bartlett.test(rate~RF, etch.rate)
## --------------------------------------------------------------------------------------
library(car)
read.table("etchrate.txt",header=T)
read.table("etchrate.txt",header=T)
etch.rate <- read.table("etchrate.txt",header=T)
etch.rate <- read.table("etchrate.txt",header=T)
## lab 1
## March 30, 2022
## --------------------------------------------------------------------------------------
mod.x <- c(16.85,16.40,17.21,16.35,16.52,17.04,16.96,17.15,16.59,16.57)
unmod.x <- c(16.62,16.75,17.37,17.12,16.98,16.87,17.34,17.02,17.08,17.27)
## --------------------------------------------------------------------------------------
# sample mean
mean(mod.x)
mean(unmod.x) #unmod > mod
# sample standard deviation
sd(mod.x)
# sample median
median(mod.x)
# Median Absolute Deviation (MAD)
mad(mod.x)
## --------------------------------------------------------------------------------------
par(mfrow=c(1,2))
hist(mod.x)
boxplot(mod.x, unmod.x, names=c("modified","unmodified"))
## --------------------------------------------------------------------------------------
par(mfrow=c(1,2))
qqnorm(mod.x); qqline(mod.x,col=2)
qqnorm(unmod.x); qqline(unmod.x,col=2)
## --------------------------------------------------------------------------------------
t.test(mod.x, unmod.x, var.equal = TRUE)
## --------------------------------------------------------------------------------------
var.test(mod.x, unmod.x)
## --------------------------------------------------------------------------------------
t.test(mod.x, unmod.x)
## --------------------------------------------------------------------------------------
library(Rfast) # For the function `permutation`
X <- c(2.06, -1.50, 2.57, 1.85, 7.36)
Y <- c(5.26, 3.26, 7.21, 4.79)
t.obs <- abs(mean(X)-mean(Y))
perms <- permutation(c(X, Y))
perm.t <- apply(perms, 1, function(v) abs(mean(v[1:5])-mean(v[6:9])))
mean(perm.t > t.obs) # p-value
## --------------------------------------------------------------------------------------
etch.rate <- read.table("etchrate.txt",header=T)
## --------------------------------------------------------------------------------------
# first, we convert RF variable to factor
etch.rate$RF <- as.factor(etch.rate$RF)
# next, we run the model
etch.rate.aov <- aov(rate~RF,etch.rate)
summary(etch.rate.aov)
# alternative way
lm.fit <- lm(rate~RF,etch.rate)
anova(lm.fit)
## --------------------------------------------------------------------------------------
# overall mean
(erate.mean <- mean(etch.rate$rate))
# treatment effects
#attach(etch.rate) 만약 이를 이용하면 tapply에서 each.rate안써도 됨.
with(etch.rate, tapply(rate, RF, function(x) mean(x)-erate.mean))
## --------------------------------------------------------------------------------------
model.tables(etch.rate.aov)
## --------------------------------------------------------------------------------------
par(mfrow=c(1,2))
plot(etch.rate.aov, which=1:2)
## --------------------------------------------------------------------------------------
bartlett.test(rate~RF, etch.rate)
## --------------------------------------------------------------------------------------
library(car)
leveneTest(etch.rate.aov, center=mean)
# alternative way
group.mean <- tapply(etch.rate$rate,etch.rate$RF,mean)
z <- abs(etch.rate$rate-rep(group.mean,each=5))
fit.z <- aov(z~RF,etch.rate)
summary(fit.z)
## --------------------------------------------------------------------------------------
pairwise.t.test(etch.rate$rate,etch.rate$RF,p.adjust.method="bonferroni")
## --------------------------------------------------------------------------------------
etch.rate.aov <- aov(rate~RF,etch.rate)
TukeyHSD(etch.rate.aov)
plot(TukeyHSD(etch.rate.aov),las=1)
## --------------------------------------------------------------------------------------
kruskal.test(rate~RF, etch.rate)
## --------------------------------------------------------------------------------------
wilcox.test(etch.rate$rate[etch.rate$RF==160],etch.rate$rate[etch.rate$RF==180])
wilcox.test(etch.rate$rate[etch.rate$RF==160],etch.rate$rate[etch.rate$RF==180], paired=TRUE)
perms
apply(perms, 1, function(v) abs(mean(v[1:5])-mean(v[6:9])))
etch.rate$RF <- as.factor(etch.rate$RF)
etch.rate$RF
etch.rate
aov(rate~RF,etch.rate)
summary(etch.rate.aov)
